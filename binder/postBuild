#!/usr/bin/env bash
set -euo pipefail

# Binderâ€™s conda env from environment.yml is named "notebook"
ENV_NAME=notebook
CONDA_PREFIX_PATH="$(conda run -n "$ENV_NAME" bash -lc 'echo -n "$CONDA_PREFIX"')"

# Jupyter Server config (enable nbclassic & set default URL)
JS_CONF_D="$CONDA_PREFIX_PATH/etc/jupyter/jupyter_server_config.d"
# Classic Notebook nbconfig (toggle extensions)
NB_D="$CONDA_PREFIX_PATH/etc/jupyter/nbconfig/notebook.d"

mkdir -p "$JS_CONF_D" "$NB_D"

# Ensure nbclassic is enabled and land on /tree
cat > "$JS_CONF_D/nbclassic.json" <<'JSON'
{
  "ServerApp": {
    "jpserver_extensions": {
      "nbclassic": true
    },
    "default_url": "/tree"
  }
}
JSON

# Enabling required classic nbextensions
cat > "$NB_D/enable_extensions.json" <<'JSON'
{
  "load_extensions": {
    "toc2/main": true,
    "collapsible_headings/main": true,
    "execute_time/ExecuteTime": true,
    "hinterland/hinterland": true,
    "codefolding/main": true,
    "varInspector/main": true,
    "exercise2/main": true,
    "ruler/main": true,
    "scroll_down/main": true,
    "splitcell/main": true,
    "freeze/main": true
  }
}
JSON

echo "[postBuild] Configs written under: $CONDA_PREFIX_PATH/etc/jupyter"


