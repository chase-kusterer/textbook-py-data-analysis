
#!/usr/bin/env bash
set -e #-euo pipefail

# Binder creates the env from environment.yml as 'notebook'
ENV_NAME=notebook

echo "[postBuild] Locating conda prefix for env: $ENV_NAME"
CONDA_PREFIX_PATH="$(conda run -n "$ENV_NAME" bash -lc 'echo -n "$CONDA_PREFIX"')"
echo "[postBuild] CONDA_PREFIX=$CONDA_PREFIX_PATH"

# System-level Jupyter config dirs inside the env
NB_D="$CONDA_PREFIX_PATH/etc/jupyter/nbconfig/notebook.d"
JUP_CONF_D="$CONDA_PREFIX_PATH/etc/jupyter/jupyter_notebook_config.d"

mkdir -p "$NB_D" "$JUP_CONF_D"

echo "[postBuild] Enabling classic default URL"
cat > "$JUP_CONF_D/default_url.json" <<'JSON'
{
  "NotebookApp": {
    "default_url": "/tree"
  }
}
JSON

echo "[postBuild] Enabling nbextensions configurator serverextension"
cat > "$JUP_CONF_D/jupyter_nbextensions_configurator.json" <<'JSON'
{
  "NotebookApp": {
    "nbserver_extensions": {
      "jupyter_nbextensions_configurator": true
    }
  }
}
JSON

echo "[postBuild] Enabling your classic nbextensions"
cat > "$NB_D/enable_extensions.json" <<'JSON'
{
  "load_extensions": {
    "toc2/main": true,
    "collapsible_headings/main": true,
    "execute_time/ExecuteTime": true,
    "hinterland/hinterland": true,
    "codefolding/main": true,
    "varInspector/main": true,
    "exercise2/main": true,
    "ruler/main": true,
    "scroll_down/main": true,
    "splitcell/main": true,
    "freeze/main": true
  }
}
JSON

echo "[postBuild] Verifying files:"
ls -R "$CONDA_PREFIX_PATH/etc/jupyter" || true

echo "[postBuild] Done."
